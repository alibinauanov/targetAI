import React, { useState } from 'react';
import { Upload, FileText, Users, Zap, Download, CheckCircle, AlertTriangle, Image, Video, Grid3X3, BarChart3 } from 'lucide-react';

interface CampaignData {
  companyName: string;
  niche: string;
  audience: string;
  offer: string;
  adNetwork: string;
  adGoal: string;
  adFormat: string;
  adStyle: string;
  textStyle: string;
  fbReport: File | null;
  creativeType: 'static' | 'video' | null;
  files: File[];
  personaUpload: boolean | null;
  personaFile: File | null;
  selectedTemplates: string[];
}

interface GeneratedCampaign {
  adCopy: string[];
  audienceSegments: {
    title: string;
    details: string[];
  }[];
  budgetRecommendation: string[];
  campaignStructure: string[];
  tips: string[];
  creativeExamples: string[];
}

const CreativeTemplate = ({ 
  id, 
  title, 
  preview, 
  isSelected, 
  onSelect,
  imageUrl
}: {
  id: string;
  title: string;
  preview: string;
  isSelected: boolean;
  onSelect: (id: string) => void;
  imageUrl?: string;
}) => (
  <div 
    className={`border-2 rounded-lg p-4 cursor-pointer transition-all ${
      isSelected 
        ? 'border-purple-500 bg-purple-50' 
        : 'border-gray-200 hover:border-gray-300'
    }`}
    onClick={() => onSelect(id)}
  >
    <div className="aspect-square bg-gray-100 rounded-lg mb-3 flex items-center justify-center overflow-hidden">
      {imageUrl ? (
        <img src={imageUrl} alt={title} className="w-full h-full object-cover" />
      ) : (
        <span className="text-xs text-gray-500 text-center p-2">{preview}</span>
      )}
    </div>
    <p className="text-sm font-medium text-center">{title}</p>
  </div>
);

const ProgressBar = ({ progress }: { progress: number }) => (
  <div className="w-full bg-gray-200 rounded-full h-3 mb-4">
    <div 
      className="bg-gradient-to-r from-purple-600 to-blue-600 h-3 rounded-full transition-all duration-300 ease-out"
      style={{ width: `${progress}%` }}
    ></div>
  </div>
);

export default function CampaignCreator() {
  const [step, setStep] = useState(1);
  const [campaignData, setCampaignData] = useState<CampaignData>({
    companyName: '',
    niche: '',
    audience: '',
    offer: '',
    adNetwork: '',
    adGoal: '',
    adFormat: '',
    adStyle: '',
    textStyle: '',
    fbReport: null,
    creativeType: null,
    files: [],
    personaUpload: null,
    personaFile: null,
    selectedTemplates: []
  });
  const [isGenerating, setIsGenerating] = useState(false);
  const [generationProgress, setGenerationProgress] = useState(0);
  const [generatedCampaign, setGeneratedCampaign] = useState<GeneratedCampaign | null>(null);

  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {
    const files = Array.from(event.target.files || []);
    setCampaignData(prev => ({ ...prev, files: [...prev.files, ...files] }));
  };

  const handleFbReportUpload = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0] || null;
    setCampaignData(prev => ({ ...prev, fbReport: file }));
  };

  const handleTemplateSelect = (templateId: string) => {
    setCampaignData(prev => ({
      ...prev,
      selectedTemplates: prev.selectedTemplates.includes(templateId)
        ? prev.selectedTemplates.filter(id => id !== templateId)
        : [...prev.selectedTemplates, templateId]
    }));
  };

  const generateCampaign = async () => {
    setIsGenerating(true);
    setGenerationProgress(0);
    
    // Simulate AI processing with progress updates
    const progressSteps = [
      { progress: 15, delay: 500, message: '–ê–Ω–∞–ª–∏–∑ —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏...' },
      { progress: 30, delay: 800, message: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤...' },
      { progress: 50, delay: 1000, message: '–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–∞–º–ø–∞–Ω–∏–∏...' },
      { progress: 70, delay: 800, message: '–†–∞—Å—á–µ—Ç –±—é–¥–∂–µ—Ç–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...' },
      { progress: 85, delay: 600, message: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ Facebook...' },
      { progress: 100, delay: 500, message: '–§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–º–ø–∞–Ω–∏–∏...' }
    ];

    for (const stepData of progressSteps) {
      await new Promise(resolve => setTimeout(resolve, stepData.delay));
      setGenerationProgress(stepData.progress);
    }
    
    const campaign: GeneratedCampaign = {
      adCopy: [
        '–î—É–º–∞–ª(–∞), –ø–æ—Å—Ç—É–ø–∏—Ç—å –≤ —Ç–æ–ø –≤—É–∑ ‚Äî —ç—Ç–æ —Ä–∞–Ω–¥–æ–º? –ê–≥–∞, —Ç–æ–∂–µ —Ç–∞–∫ –¥—É–º–∞–ª–∏. College Hub ‚Äî —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –∑–∞ 7 –¥–Ω–µ–π. –†–∞–±–æ—Ç–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ üëÄ',
        '–°–æ—Å—Ç–∞–≤—å —Å–≤–æ–π –ø—É—Ç—å –∫ –≤—É–∑—É –º–µ—á—Ç—ã. –ë–µ–∑ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤. –ë–µ–∑ —Ö–∞–æ—Å–∞. –ó–∞ 7 –¥–Ω–µ–π. –ò–ª–∏ –¥–µ–Ω—å–≥–∏ –≤–µ—Ä–Ω—É—Ç.',
        '–í–∞—à–∞ –¥–æ—á—å –∏–ª–∏ —Å—ã–Ω –º–µ—á—Ç–∞—é—Ç —É—á–∏—Ç—å—Å—è –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π? –ü–æ–º–æ–∂–µ–º —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –∑–∞ 7 –¥–Ω–µ–π. –ò–ª–∏ –≤–µ—Ä–Ω—ë–º –¥–µ–Ω—å–≥–∏.',
        '–†–µ–±—ë–Ω–æ–∫ –Ω–µ –∑–Ω–∞–µ—Ç, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å? –° College Hub –æ–Ω –ø–æ–ª—É—á–∏—Ç –ø–æ—à–∞–≥–æ–≤—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ.'
      ],
      audienceSegments: [
        {
          title: '–õ–∏—Ü–æ –í–ª–∏—è—é—â–µ–µ –Ω–∞ –†–µ—à–µ–Ω–∏–µ (–º–æ–ª–æ–¥—ë–∂—å 14‚Äì21)',
          details: [
            '–í–æ–∑—Ä–∞—Å—Ç: 14‚Äì21',
            '–ì–µ–æ: –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω, –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω',
            '–ò–Ω—Ç–µ—Ä–µ—Å—ã: Study Abroad, NIS, –ö–¢–õ, Quantum, IELTS, TOEFL, SAT',
            '–ü–æ–≤–µ–¥–µ–Ω–∏–µ: Instagram Reels, TikTok, Telegram',
            '–Ø–∑—ã–∫: –†—É—Å—Å–∫–∏–π, –ö–∞–∑–∞—Ö—Å–∫–∏–π'
          ]
        },
        {
          title: '–õ–∏—Ü–æ –ü—Ä–∏–Ω–∏–º–∞—é—â–µ–µ –†–µ—à–µ–Ω–∏–µ (—Ä–æ–¥–∏—Ç–µ–ª–∏)',
          details: [
            '–í–æ–∑—Ä–∞—Å—Ç: 35‚Äì55',
            '–ì–µ–æ: –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω, –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω',
            '–ò–Ω—Ç–µ—Ä–µ—Å—ã: –†–æ–¥–∏—Ç–µ–ª—å—Å—Ç–≤–æ, —á–∞—Å—Ç–Ω—ã–µ —à–∫–æ–ª—ã, —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—ã',
            '–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã: Facebook Groups, Instagram',
            '–Ø–∑—ã–∫: –†—É—Å—Å–∫–∏–π'
          ]
        }
      ],
      budgetRecommendation: [
        '–ü–µ—Ä–≤—ã–π —Ç–µ—Å—Ç: –ú–∏–Ω–∏–º—É–º 3 –∫–∞–º–ø–∞–Ω–∏–∏: –õ–í–† + –õ–ü–† + Lookalike –∏–ª–∏ Broad',
        '–í –∫–∞–∂–¥–æ–π ‚Äî 2‚Äì3 –∫—Ä–µ–∞—Ç–∏–≤–∞, 2 —Ç–µ–∫—Å—Ç–∞',
        '–ë—é–¥–∂–µ—Ç –Ω–∞ –≥—Ä—É–ø–ø—É: –æ—Ç $5‚Äì10/–¥–µ–Ω—å',
        '–ò—Ç–æ–≥–æ —Å—Ç–∞—Ä—Ç: ~$20‚Äì30/–¥–µ–Ω—å –Ω–∞ –≤–µ—Å—å –∞–∫–∫–∞—É–Ω—Ç',
        '–ß–µ—Ä–µ–∑ 3‚Äì5 –¥–Ω–µ–π –æ—Ç–∫–ª—é—á–∞–µ—à—å —Å–ª–∞–±—ã–µ –∫—Ä–µ–∞—Ç–∏–≤—ã/—Ç–µ–∫—Å—Ç—ã, –∑–∞–ª–∏–≤–∞–µ—à—å –ª—É—á—à–µ–µ'
      ],
      campaignStructure: [
        'Lead Gen (–ª–∏–¥-—Ñ–æ—Ä–º–∞ –≤ FB/IG) ‚Äî –µ—Å–ª–∏ –Ω–µ—Ç –≥–æ—Ç–æ–≤–æ–≥–æ —Å–∞–π—Ç–∞',
        'Traffic ‚Üí Telegram / Quiz / WhatsApp ‚Äî –µ—Å–ª–∏ –æ–±—â–µ–Ω–∏–µ –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ',
        'Messages (Insta DMs) ‚Äî –µ—Å–ª–∏ –∑–∞–∫—Ä—ã–≤–∞–µ—à—å –≤—Ä—É—á–Ω—É—é –≤ –¥–∏—Ä–µ–∫—Ç–µ',
        '–õ–í–† (–ø–æ–¥—Ä–æ—Å—Ç–∫–∏) ‚Äî Reels / TikTok-style / –º–µ–º–Ω—ã–π —Å—Ç–∏–ª—å',
        '–õ–ü–† (—Ä–æ–¥–∏—Ç–µ–ª–∏) ‚Äî —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥ / –æ—Ç–∑—ã–≤—ã / –≥–∞—Ä–∞–Ω—Ç–∏—è',
        'Retargeting ‚Äî –≤—Å–µ, –∫—Ç–æ —Å–º–æ—Ç—Ä–µ–ª 50%+ –≤–∏–¥–µ–æ, –æ—Ç–∫—Ä—ã–ª –ª–∏–¥-—Ñ–æ—Ä–º—É'
      ],
      tips: [
        '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∏–ª–∏: –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–π vs. —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π',
        '–†–∞–∑–¥–µ–ª–∏—Ç–µ –∫–∞–º–ø–∞–Ω–∏–∏ –ø–æ –¶–ê. –ù–µ —Å–º–µ—à–∏–≤–∞–π –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤ –∏ —Ä–æ–¥–∏—Ç–µ–ª–µ–π –≤ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø–µ',
        '–î–æ–±–∞–≤—å—Ç–µ –ª–∏–¥-—Ñ–æ—Ä–º—É –∏–ª–∏ quiz –Ω–∞ –ª–µ–Ω–¥–∏–Ω–≥–µ, —á—Ç–æ–±—ã –Ω–µ –≥–Ω–∞—Ç—å —Ç—Ä–∞—Ñ–∏–∫ –≤–ø—É—Å—Ç—É—é',
        '–°–æ–±–µ—Ä–∏ Retargeting –∞—É–¥–∏—Ç–æ—Ä–∏—é –ø–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º 50%+ –≤–∏–¥–µ–æ',
        '–°–æ–±–∏—Ä–∞–π—Ç–µ –≤–∏–¥–µ–æ-–æ—Ç–∑—ã–≤—ã –æ—Ç –ø–µ—Ä–≤—ã—Ö —é–∑–µ—Ä–æ–≤ ‚Äî –æ–Ω–∏ –ø–æ—Ç–æ–º –ª–µ–≥–∫–æ –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ —Ä–µ–∫–ª–∞–º—É'
      ],
      creativeExamples: [
        '–û—Ç–∑—ã–≤ –∫–ª–∏–µ–Ω—Ç–∞ —Å 5 –∑–≤–µ–∑–¥–∞–º–∏',
        '–ü—Ä–æ–º–æ —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ –¥–µ–Ω–µ–≥',
        '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω—ã—Ö –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–π'
      ]
    };
    
    setGeneratedCampaign(campaign);
    setIsGenerating(false);
    setStep(4);
  };

  const staticTemplates = [
    { 
      id: 'product-card', 
      title: '–ü—Ä–æ–¥—É–∫—Ç–æ–≤–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞', 
      preview: '–ò–Ω—Ñ–∞ –ø—Ä–æ –ø—Ä–æ–¥—É–∫—Ç + —Ü–µ–Ω–∞', 
      imageUrl: 'https://images.pexels.com/photos/3184465/pexels-photo-3184465.jpeg?auto=compress&cs=tinysrgb&w=400' 
    },
    { 
      id: 'testimonial', 
      title: '–û—Ç–∑—ã–≤ –∫–ª–∏–µ–Ω—Ç–∞', 
      preview: '–¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞', 
      imageUrl: 'https://images.pexels.com/photos/3184339/pexels-photo-3184339.jpeg?auto=compress&cs=tinysrgb&w=400' 
    },
    { 
      id: 'meme', 
      title: '–ú–µ–º', 
      preview: '–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –º–µ–º', 
      imageUrl: 'https://images.pexels.com/photos/4348401/pexels-photo-4348401.jpeg?auto=compress&cs=tinysrgb&w=400' 
    },
    { 
      id: 'promo', 
      title: '–ü—Ä–æ–º–æ-–∞–∫—Ü–∏—è', 
      preview: '–°–∫–∏–¥–∫–∞ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç', 
      imageUrl: 'https://images.pexels.com/photos/3944091/pexels-photo-3944091.jpeg?auto=compress&cs=tinysrgb&w=400' 
    },
    { 
      id: 'before-after', 
      title: '–î–æ / –ø–æ—Å–ª–µ', 
      preview: '–≠—Ñ—Ñ–µ–∫—Ç –¥–æ –∏ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞', 
      imageUrl: 'https://images.pexels.com/photos/4386321/pexels-photo-4386321.jpeg?auto=compress&cs=tinysrgb&w=400' 
    },
    { 
      id: 'statistics', 
      title: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 
      preview: '–¶–∏—Ñ—Ä—ã —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –ø–æ–ª—å–∑—É –ø—Ä–æ–¥—É–∫—Ç–∞', 
      imageUrl: 'https://images.pexels.com/photos/669615/pexels-photo-669615.jpeg?auto=compress&cs=tinysrgb&w=400'
    }
  ];

  const videoTemplates = [
    { 
      id: 'video-testimonial', 
      title: '–û—Ç–∑—ã–≤ –∫–ª–∏–µ–Ω—Ç–∞', 
      preview: '–í–∏–¥–µ–æ/–∞—É–¥–∏–æ –æ—Ç–∑—ã–≤', 
      imageUrl: 'https://images.unsplash.com/photo-1573497019940-1c28c88b4f3e?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=400&q=80' 
    },
    { 
      id: 'video-meme', 
      title: '–ú–µ–º', 
      preview: '–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –º–µ–º —á—Ç–æ –∑–∞–ª–µ—Ç–∏—Ç', 
      imageUrl: 'https://images.pexels.com/photos/4348401/pexels-photo-4348401.jpeg?auto=compress&cs=tinysrgb&w=400' 
    },
    { 
      id: 'video-before-after', 
      title: '–î–æ / –ø–æ—Å–ª–µ', 
      preview: '–≠—Ñ—Ñ–µ–∫—Ç –¥–æ –∏ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞', 
      imageUrl: 'https://images.pexels.com/photos/4386370/pexels-photo-4386370.jpeg?auto=compress&cs=tinysrgb&w=400' 
    },
    { 
      id: 'expertise', 
      title: '–≠–∫—Å–ø–µ—Ä—Ç–Ω–æ—Å—Ç—å', 
      preview: '–≠–∫—Å–ø–µ—Ä—Ç–Ω–æ–µ –ø–æ–ª–µ–∑–Ω–æ–µ –≤–∏–¥–µ–æ', 
      imageUrl: 'https://images.pexels.com/photos/3184339/pexels-photo-3184339.jpeg?auto=compress&cs=tinysrgb&w=400' 
    },
    { 
      id: 'movie', 
      title: '–§–∏–ª—å–º', 
      preview: '–§–∏–ª—å–º', 
      imageUrl: 'https://images.pexels.com/photos/7991579/pexels-photo-7991579.jpeg?auto=compress&cs=tinysrgb&w=400'
    }
  ];

  const currentTemplates = campaignData.creativeType === 'static' ? staticTemplates : videoTemplates;

  const downloadAssets = () => {
    const files = [
      '/campaign.pdf',
      '/—Å—Ç–∞—Ç–∏–∫–∞1.png',
      '/—Å—Ç–∞—Ç–∏–∫–∞2.png',
      '/—Å—Ç–∞—Ç–∏–∫–∞3.png'
    ];

    files.forEach(file => {
      const link = document.createElement('a');
      link.href = file;
      link.download = file.split('/').pop() || '';
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    });
  };

  return (
    <div className="max-w-4xl mx-auto p-6">
      {/* Progress Steps */}
      <div className="flex items-center justify-center mb-8">
        {[1, 2, 3, 4, 5].map((num) => (
          <div key={num} className="flex items-center">
            <div className={`w-10 h-10 rounded-full flex items-center justify-center font-semibold ${
              step >= num ? 'bg-purple-600 text-white' : 'bg-gray-200 text-gray-600'
            }`}>
              {num}
            </div>
            {num < 5 && <div className={`w-16 h-1 mx-2 ${step > num ? 'bg-purple-600' : 'bg-gray-200'}`} />}
          </div>
        ))}
      </div>

      {/* Step 1: Company Info */}
      {step === 1 && (
        <div className="bg-white rounded-2xl shadow-lg p-8">
          <h2 className="text-2xl font-bold text-gray-900 mb-2">–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ—É –ø—Ä–æ –∫–æ–º–ø–∞–Ω–∏—é</h2>
          <div className="space-y-6">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏</label>
              <input type="text" className="w-full p-4 border border-gray-300 rounded-lg" value={campaignData.companyName} onChange={e => setCampaignData(prev => ({ ...prev, companyName: e.target.value }))} />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">–ù–∏—à–∞</label>
              <input type="text" className="w-full p-4 border border-gray-300 rounded-lg" value={campaignData.niche} onChange={e => setCampaignData(prev => ({ ...prev, niche: e.target.value }))} />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è (–õ–ü–† –∏ –õ–í–†)</label>
              <input type="text" className="w-full p-4 border border-gray-300 rounded-lg" value={campaignData.audience} onChange={e => setCampaignData(prev => ({ ...prev, audience: e.target.value }))} />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">–í–∞—à –æ—Ñ—Ñ–µ—Ä</label>
              <input type="text" className="w-full p-4 border border-gray-300 rounded-lg" value={campaignData.offer} onChange={e => setCampaignData(prev => ({ ...prev, offer: e.target.value }))} />
            </div>
          </div>
          <div className="mt-8 flex justify-end">
            <button onClick={() => setStep(2)} disabled={!campaignData.companyName || !campaignData.niche || !campaignData.audience || !campaignData.offer} className="px-6 py-3 bg-purple-600 text-white rounded-lg font-semibold hover:bg-purple-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors">–î–∞–ª–µ–µ</button>
          </div>
        </div>
      )}

      {/* Step 2: Ad Info */}
      {step === 2 && (
        <div className="bg-white rounded-2xl shadow-lg p-8">
          <h2 className="text-2xl font-bold text-gray-900 mb-2">–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ—É –ø—Ä–æ –∂–µ–ª–∞–µ–º–æ–π —Ä–µ–∫–ª–∞–º–µ</h2>
          <div className="space-y-6">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">–°–æ—Ü—Å–µ—Ç—å</label>
              <input type="text" className="w-full p-4 border border-gray-300 rounded-lg" value={campaignData.adNetwork} onChange={e => setCampaignData(prev => ({ ...prev, adNetwork: e.target.value }))} />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">–¶–µ–ª—å —Ä–µ–∫–ª–∞–º—ã</label>
              <input type="text" className="w-full p-4 border border-gray-300 rounded-lg" value={campaignData.adGoal} onChange={e => setCampaignData(prev => ({ ...prev, adGoal: e.target.value }))} />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">–§–æ—Ä–º–∞—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è</label>
              <input type="text" className="w-full p-4 border border-gray-300 rounded-lg" value={campaignData.adFormat} onChange={e => setCampaignData(prev => ({ ...prev, adFormat: e.target.value }))} />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">–†–µ–∫–ª–∞–º–Ω—ã–π —Å—Ç–∏–ª—å</label>
              <input type="text" className="w-full p-4 border border-gray-300 rounded-lg" value={campaignData.adStyle} onChange={e => setCampaignData(prev => ({ ...prev, adStyle: e.target.value }))} />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">–°—Ç–∏–ª—å —Ç–µ–∫—Å—Ç–∞</label>
              <input type="text" className="w-full p-4 border border-gray-300 rounded-lg" value={campaignData.textStyle} onChange={e => setCampaignData(prev => ({ ...prev, textStyle: e.target.value }))} />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">–û—Ç—á–µ—Ç –∏–∑ Facebook –∫–∞–±–∏–Ω–µ—Ç–∞</label>
              <div className="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-purple-400 transition-colors">
                <span className="inline-flex items-center justify-center w-12 h-12 rounded-full bg-blue-100 mb-4">
                  <svg className="w-6 h-6 text-blue-500" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" d="M4 16v2a2 2 0 002 2h12a2 2 0 002-2v-2M7 10l5 5m0 0l5-5m-5 5V4" /></svg>
                </span>
                <p className="text-gray-600 mb-2">–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ—Ç—á–µ—Ç –∏–∑ Facebook Ads Manager –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞</p>
                <p className="text-sm text-gray-500 mb-4">–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã: .csv, .xlsx, .xls</p>
                <input
                  type="file"
                  accept=".csv,.xlsx,.xls"
                  onChange={e => setCampaignData(prev => ({ ...prev, fbReport: e.target.files?.[0] || null }))}
                  className="hidden"
                  id="fb-report-upload"
                />
                <label
                  htmlFor="fb-report-upload"
                  className="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 cursor-pointer transition-colors"
                >
                  <svg className="h-5 w-5 mr-2" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" d="M4 16v2a2 2 0 002 2h12a2 2 0 002-2v-2M7 10l5 5m0 0l5-5m-5 5V4" /></svg>
                  –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
                </label>
                {campaignData.fbReport && (
                  <div className="mt-4 p-3 bg-green-50 border border-green-200 rounded-lg">
                    <div className="flex items-center justify-center space-x-2">
                      <svg className="h-5 w-5 text-green-600" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" d="M5 13l4 4L19 7" /></svg>
                      <span className="text-sm text-green-700 font-medium">{campaignData.fbReport.name}</span>
                    </div>
                    <p className="text-xs text-green-600 mt-1">–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∞–Ω–∞–ª–∏–∑—É</p>
                  </div>
                )}
              </div>
            </div>
          </div>
          <div className="mt-8 flex justify-between">
            <button onClick={() => setStep(1)} className="px-6 py-3 border border-gray-300 text-gray-700 rounded-lg font-semibold hover:bg-gray-50 transition-colors">–ù–∞–∑–∞–¥</button>
            <button onClick={() => setStep(3)} disabled={!campaignData.adNetwork || !campaignData.adGoal || !campaignData.adFormat || !campaignData.adStyle || !campaignData.textStyle} className="px-6 py-3 bg-purple-600 text-white rounded-lg font-semibold hover:bg-purple-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors">–î–∞–ª–µ–µ</button>
          </div>
        </div>
      )}

      {/* Step 3: Creative Type */}
      {step === 3 && (
        <div className="bg-white rounded-2xl shadow-lg p-8">
          <h2 className="text-2xl font-bold text-gray-900 mb-2">–í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø –∫—Ä–µ–∞—Ç–∏–≤–∞</h2>
          <div className="flex gap-8 justify-center mt-8">
            <button onClick={() => setCampaignData(prev => ({ ...prev, creativeType: 'static' }))} className={`w-40 h-40 rounded-xl border-2 flex flex-col items-center justify-center text-lg font-semibold ${campaignData.creativeType === 'static' ? 'border-purple-600 bg-purple-50' : 'border-gray-300'}`}>—Å—Ç–∞—Ç–∏–∫–∞</button>
            <button onClick={() => setCampaignData(prev => ({ ...prev, creativeType: 'video' }))} className={`w-40 h-40 rounded-xl border-2 flex flex-col items-center justify-center text-lg font-semibold ${campaignData.creativeType === 'video' ? 'border-purple-600 bg-purple-50' : 'border-gray-300'}`}>–≤–∏–¥–µ–æ</button>
          </div>
          <div className="mt-8 flex justify-between">
            <button onClick={() => setStep(2)} className="px-6 py-3 border border-gray-300 text-gray-700 rounded-lg font-semibold hover:bg-gray-50 transition-colors">–ù–∞–∑–∞–¥</button>
            <button onClick={() => setStep(4)} disabled={!campaignData.creativeType} className="px-6 py-3 bg-purple-600 text-white rounded-lg font-semibold hover:bg-purple-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors">–î–∞–ª–µ–µ</button>
          </div>
        </div>
      )}

      {/* Step 4: Persona Upload */}
      {step === 4 && (
        <div className="bg-white rounded-2xl shadow-lg p-8">
          <h2 className="text-2xl font-bold text-gray-900 mb-2">–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞?</h2>
          <div className="flex gap-8 justify-center mt-8">
            <button onClick={() => setCampaignData(prev => ({ ...prev, personaUpload: false }))} className={`w-40 h-40 rounded-xl border-2 flex flex-col items-center justify-center text-lg font-semibold ${campaignData.personaUpload === false ? 'border-purple-600 bg-purple-50' : 'border-gray-300'}`}>–ù–µ—Ç</button>
            <button onClick={() => setCampaignData(prev => ({ ...prev, personaUpload: true }))} className={`w-40 h-40 rounded-xl border-2 flex flex-col items-center justify-center text-lg font-semibold ${campaignData.personaUpload === true ? 'border-purple-600 bg-purple-50' : 'border-gray-300'}`}>–î–∞</button>
          </div>
          {campaignData.personaUpload === true && (
            <div className="mt-8">
              <label className="block text-sm font-medium text-gray-700 mb-2">–ó–∞–≥—Ä—É–∑–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã</label>
              <div className="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-purple-400 transition-colors">
                <span className="inline-flex items-center justify-center w-12 h-12 rounded-full bg-purple-100 mb-4">
                  <svg className="w-6 h-6 text-purple-500" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" d="M4 16v2a2 2 0 002 2h12a2 2 0 002-2v-2M7 10l5 5m0 0l5-5m-5 5V4" /></svg>
                </span>
                <p className="text-gray-600 mb-2">–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å –≤–∞—à–∏–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º</p>
                <input type="file" onChange={e => setCampaignData(prev => ({ ...prev, personaFile: e.target.files?.[0] || null }))} className="hidden" id="persona-upload" />
                <label htmlFor="persona-upload" className="inline-flex items-center px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 cursor-pointer transition-colors">
                  <svg className="h-5 w-5 mr-2" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" d="M4 16v2a2 2 0 002 2h12a2 2 0 002-2v-2M7 10l5 5m0 0l5-5m-5 5V4" /></svg>
                  –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
                </label>
                {campaignData.personaFile && (
                  <div className="mt-4 p-3 bg-green-50 border border-green-200 rounded-lg">
                    <div className="flex items-center justify-center space-x-2">
                      <svg className="h-5 w-5 text-green-600" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" d="M5 13l4 4L19 7" /></svg>
                      <span className="text-sm text-green-700 font-medium">{campaignData.personaFile.name}</span>
                    </div>
                    <p className="text-xs text-green-600 mt-1">–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∞–Ω–∞–ª–∏–∑—É</p>
                  </div>
                )}
              </div>
            </div>
          )}
          {campaignData.personaUpload === false && (
            <div className="mt-8">
              <label className="block text-sm font-medium text-gray-700 mb-2">–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω—ã –∫—Ä–µ–∞—Ç–∏–≤–æ–≤</label>
              <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
                {currentTemplates.map(template => (
                  <CreativeTemplate
                    key={template.id}
                    id={template.id}
                    title={template.title}
                    preview={template.preview}
                    isSelected={campaignData.selectedTemplates.includes(template.id)}
                    onSelect={handleTemplateSelect}
                    imageUrl={template.imageUrl}
                  />
                ))}
              </div>
            </div>
          )}
          <div className="mt-8 flex justify-between">
            <button onClick={() => setStep(3)} className="px-6 py-3 border border-gray-300 text-gray-700 rounded-lg font-semibold hover:bg-gray-50 transition-colors">–ù–∞–∑–∞–¥</button>
            <button
              onClick={async () => {
                setIsGenerating(true);
                setGenerationProgress(0);
                await generateCampaign();
                setIsGenerating(false);
                setStep(5);
              }}
              disabled={campaignData.personaUpload === null || (campaignData.personaUpload && !campaignData.personaFile)}
              className="px-6 py-3 bg-purple-600 text-white rounded-lg font-semibold hover:bg-purple-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors"
            >
              –î–∞–ª–µ–µ
            </button>
          </div>
        </div>
      )}

      {/* Generation Progress (between 4 and 5) */}
      {isGenerating && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-2xl p-8 max-w-md w-full mx-4">
            <div className="text-center mb-6">
              <div className="animate-spin rounded-full h-12 w-12 border-4 border-purple-600 border-t-transparent mx-auto mb-4"></div>
              <h3 className="text-lg font-semibold text-gray-900 mb-2">–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏</h3>
              <p className="text-sm text-gray-600">–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ–∑–¥–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –∫–∞–º–ø–∞–Ω–∏—é</p>
            </div>
            <ProgressBar progress={generationProgress} />
            <p className="text-center text-sm text-gray-500">{generationProgress}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ</p>
          </div>
        </div>
      )}

      {/* Step 5: Final Result (Text, Creatives, Download, Restart) */}
      {step === 5 && generatedCampaign && (
        <div className="space-y-6">
          <div className="bg-white rounded-2xl shadow-lg p-8">
            <div className="flex items-center justify-between mb-6">
              <h2 className="text-2xl font-bold text-gray-900">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–∞–º–ø–∞–Ω–∏–∏</h2>
              <button onClick={downloadAssets} className="flex items-center space-x-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors">
                <Download className="h-4 w-4" />
                <span>–°–∫–∞—á–∞—Ç—å PDF</span>
              </button>
            </div>
            <div className="space-y-8">
              {/* Ad Copy */}
              <div>
                <h3 className="text-xl font-bold text-gray-900 mb-4">1. –†–µ–∫–ª–∞–º–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã</h3>
                <div className="space-y-3">
                  {generatedCampaign.adCopy.map((copy, index) => (
                    <div key={index} className="bg-gray-50 rounded-lg p-4">
                      <p className="text-sm text-gray-800">‚Ä¢ {copy}</p>
                    </div>
                  ))}
                </div>
              </div>
              {/* Audience Segments */}
              <div>
                <h3 className="text-xl font-bold text-gray-900 mb-4">2. –ê—É–¥–∏—Ç–æ—Ä—Å–∫–∏–µ —Å–µ–≥–º–µ–Ω—Ç—ã</h3>
                <div className="space-y-4">
                  {generatedCampaign.audienceSegments.map((segment, index) => (
                    <div key={index} className="bg-gray-50 rounded-lg p-4">
                      <h4 className="font-semibold text-gray-900 mb-2">{segment.title}:</h4>
                      <div className="space-y-1">
                        {segment.details.map((detail, detailIndex) => (
                          <p key={detailIndex} className="text-sm text-gray-700">{detail}</p>
                        ))}
                      </div>
                    </div>
                  ))}
                </div>
              </div>
              {/* Budget Recommendations */}
              <div>
                <h3 className="text-xl font-bold text-gray-900 mb-4">3. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±—é–¥–∂–µ—Ç—É</h3>
                <div className="bg-gray-50 rounded-lg p-4">
                  <p className="font-semibold text-gray-900 mb-2">‚Äî –ü–µ—Ä–≤—ã–π —Ç–µ—Å—Ç:</p>
                  <div className="space-y-1">
                    {generatedCampaign.budgetRecommendation.map((rec, index) => (
                      <p key={index} className="text-sm text-gray-700">{rec}</p>
                    ))}
                  </div>
                </div>
              </div>
              {/* Campaign Structure */}
              <div>
                <h3 className="text-xl font-bold text-gray-900 mb-4">4. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞–º–ø–∞–Ω–∏–∏</h3>
                <div className="bg-gray-50 rounded-lg p-4">
                  <p className="text-sm text-gray-700 mb-3">–¢—ã —Å—Ç—Ä–æ–∏—à—å –ø–æ —Ü–µ–ª–∏: –õ–∏–¥—ã / –¢—Ä–∞—Ñ–∏–∫ / –°–æ–æ–±—â–µ–Ω–∏—è / –ö–æ–Ω–≤–µ—Ä—Å–∏–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å –ª–µ–Ω–¥–∏–Ω–≥)</p>
                  <p className="font-semibold text-gray-900 mb-2">–ù–∞ —Å—Ç–∞—Ä—Ç–µ –ª—É—á—à–µ:</p>
                  <div className="space-y-1">
                    {generatedCampaign.campaignStructure.slice(0, 3).map((structure, index) => (
                      <p key={index} className="text-sm text-gray-700">{structure}</p>
                    ))}
                  </div>
                  <p className="font-semibold text-gray-900 mt-3 mb-2">‚Äî –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –Ω–∞—á–Ω–∏ —Å 2‚Äì3 –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π:</p>
                  <div className="space-y-1">
                    {generatedCampaign.campaignStructure.slice(3).map((structure, index) => (
                      <p key={index} className="text-sm text-gray-700">{structure}</p>
                    ))}
                  </div>
                </div>
              </div>
              {/* Tips */}
              <div>
                <h3 className="text-xl font-bold text-gray-900 mb-4">5. –°–æ–≤–µ—Ç—ã</h3>
                <div className="space-y-2">
                  {generatedCampaign.tips.map((tip, index) => (
                    <div key={index} className="bg-gray-50 rounded-lg p-3">
                      <p className="text-sm text-gray-700">- {tip}</p>
                    </div>
                  ))}
                </div>
              </div>
              {/* Creative Examples (step 5, always show images from public) */}
              <div>
                <h3 className="text-xl font-bold text-gray-900 mb-4">6. –ö–∞–∫ —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –∫—Ä–µ–∞—Ç–∏–≤—ã –≤—ã–≥–ª—è–¥—è—Ç –≤ –ª–∏–Ω–∏—é –ø–æ —Å—Ç–∞—Ç–∏–∫–µ</h3>
                <div className="grid grid-cols-3 gap-4">
                  <div className="aspect-square bg-gray-100 rounded-lg p-2 flex items-center justify-center">
                    <img src="/—Å—Ç–∞—Ç–∏–∫–∞1.png" alt="–ö—Ä–µ–∞—Ç–∏–≤ 1" className="w-full h-full object-contain rounded" />
                  </div>
                  <div className="aspect-square bg-gray-100 rounded-lg p-2 flex items-center justify-center">
                    <img src="/—Å—Ç–∞—Ç–∏–∫–∞2.png" alt="–ö—Ä–µ–∞—Ç–∏–≤ 2" className="w-full h-full object-contain rounded" />
                  </div>
                  <div className="aspect-square bg-gray-100 rounded-lg p-2 flex items-center justify-center">
                    <img src="/—Å—Ç–∞—Ç–∏–∫–∞3.png" alt="–ö—Ä–µ–∞—Ç–∏–≤ 3" className="w-full h-full object-contain rounded" />
                  </div>
                </div>
              </div>
            </div>
            <div className="mt-8 flex justify-center">
              <button
                onClick={() => {
                  setStep(1);
                  setCampaignData({
                    companyName: '',
                    niche: '',
                    audience: '',
                    offer: '',
                    adNetwork: '',
                    adGoal: '',
                    adFormat: '',
                    adStyle: '',
                    textStyle: '',
                    fbReport: null,
                    creativeType: null,
                    files: [],
                    personaUpload: null,
                    personaFile: null,
                    selectedTemplates: []
                  });
                  setGeneratedCampaign(null);
                }}
                className="px-6 py-3 bg-purple-600 text-white rounded-lg font-semibold hover:bg-purple-700 transition-colors"
              >
                –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Generation Progress */}
      {isGenerating && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-2xl p-8 max-w-md w-full mx-4">
            <div className="text-center mb-6">
              <div className="animate-spin rounded-full h-12 w-12 border-4 border-purple-600 border-t-transparent mx-auto mb-4"></div>
              <h3 className="text-lg font-semibold text-gray-900 mb-2">–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏</h3>
              <p className="text-sm text-gray-600">–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ–∑–¥–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –∫–∞–º–ø–∞–Ω–∏—é</p>
            </div>
            <ProgressBar progress={generationProgress} />
            <p className="text-center text-sm text-gray-500">{generationProgress}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ</p>
          </div>
        </div>
      )}
    </div>
  );
}